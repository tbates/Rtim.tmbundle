<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>content</key>
	<string>library("umx"); umxVersion(min = "4.30.00") # version these analyses were conducted under
libs(c("naniar", "car", "lme4", "ggplot2", "emmeans", "afex", "cowplot", "visreg", "pwr", "memisc", "hrbrthemes", "jtools"))

# =======================
# = Study 1 replicate X =
# =======================
# prolific:
# researchbox:

# TODO: Make a TODO list!

# =============
# = Load Data =
# =============
fp = finder #tab
df = readxl::read_excel(fp, sheet = NULL, range = NULL, col_names = TRUE, na = "", trim_ws = TRUE, skip = 0)
namez(df)
qTxt = t(data.frame(df[1,])); qTxt; df$PID[1:10] # "junk", "...0f6c"
df = df[-c(1:3), ] # delete qTxt (1), header?, and any trial rows

# fp = finder
# df = umx_read_prolific_demog(fp, sex = "gender", df = df)
# df = umx_merge_randomized_columns(colNames, df, levels = c("treatment", "control")); table(tmp$condition)

# Fix number made into string on import
df = umx_as_numeric(df, which = c("Age"), force = TRUE)
df$Sex = factor(df$Sex, levels=c("Male", "Female"), labels = c("Male", "Female"))

# Rename obscure vars?
# df = umx_rename(df, from = c('old1', 'old2'), to = c('new1', 'new2'))

# ================
# = Score Scales =
# ================

tipiTxt = c("Disagree strongly", "Disagree a little", "Disagree moderately", "Neither agree nor disagree", "Agree a little", "Agree moderately", "Agree strongly")
df = umx_score_scale(name="TIPI_N", base = "TIPI_N", pos = 1, rev = 2, alpha = TRUE, score ="total", min=1, max = 7, mapStrings= tipiTxt, data = df) #
df = umx_score_scale(name="TIPI_E", base = "TIPI_E", pos = 1, rev = 2, alpha = TRUE, score ="total", min=1, max = 7, mapStrings= tipiTxt, data = df) #
df = umx_score_scale(name="TIPI_O", base = "TIPI_O", pos = 1, rev = 2, alpha = TRUE, score ="total", min=1, max = 7, mapStrings= tipiTxt, data = df) #
df = umx_score_scale(name="TIPI_A", base = "TIPI_A", pos = 2, rev = 1, alpha = TRUE, score ="total", min=1, max = 7, mapStrings= tipiTxt, data = df) #
df = umx_score_scale(name="TIPI_C", base = "TIPI_C", pos = 1, rev = 2, alpha = TRUE, score ="total", min=1, max = 7, mapStrings= tipiTxt, data = df) #

# Export anonymized df for researchbox
# df = prolific_anonymize(df, PID = "PID", alsoDrop = c("QID1210817776", "Timer_First.Click","Timer_Last.Click","Timer_Page.Submit","Timer_Click.Count", 'timer60_First.Click', 'timer60_Last.Click', 'timer60_Page.Submit', 'timer60_Click.Count'), baseOffset = 1e4)
# write.csv(df, file = paste0(base, "study2data.csv"))
# df = read.csv(file = paste0(base, "study2data.csv"), row.names = 1)

# ===================
# = 1. Demographics =
# ===================
df\$One = 1
umx_aggregate(Age  ~ One, data = df, what = "mean_sd", digits = 2)
umx_aggregate(Age  ~ Sex, data = df, what = "mean_sd", digits = 2)
umx_aggregate(Race ~ One, data = df, what = "mean_sd", digits = 2)

# ===================
# = 1. Descriptives =
# ===================
Demographics are shown in Table 1
umxAPA(df[, c("N", "E", "O","SD4Psycho")], report="html")
umx_cor(df[,c("TIPI_C", "howmany_30secs", "NASA_Effort1","NASA_Frustration1"")])


# ===================
# = Test Hypotheses =
# ===================
m1 = lm(DV ~ Age + Sex); umxAPA(m1, std = TRUE)

</string>
	<key>name</key>
	<string>stub analysis</string>
	<key>scope</key>
	<string>source.r</string>
	<key>tabTrigger</key>
	<string>stub</string>
	<key>uuid</key>
	<string>6C7D8769-B11A-4F27-AD35-61BA409CD136</string>
</dict>
</plist>
